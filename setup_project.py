#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.
"""

import json
import subprocess
import sys
import os

def run_command(command, check=True):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –≤ shell."""
    print(f"–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è: {command}")
    result = subprocess.run(command, shell=True, capture_output=True, text=True)
    
    if check and result.returncode != 0:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {command}")
        print(f"stdout: {result.stdout}")
        print(f"stderr: {result.stderr}")
        return False
    
    return True

def setup_git_hooks():
    """–°–æ–∑–¥–∞–µ—Ç git hooks –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–µ—Ä—Å–∏–π."""
    hooks_dir = ".git/hooks"
    if not os.path.exists(hooks_dir):
        print("‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è .git/hooks –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã –≤ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏.")
        return False
    
    # Pre-commit hook –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–µ—Ä—Å–∏–∏
    pre_commit_content = """#!/bin/sh
# Pre-commit hook –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–µ—Ä—Å–∏–∏

python3 -c "
try:
    from version import get_version
    print(f'–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: {get_version()}')
except Exception as e:
    print(f'‚ùå –û—à–∏–±–∫–∞ –≤ version.py: {e}')
    exit(1)
"
"""
    
    hook_path = os.path.join(hooks_dir, "pre-commit")
    with open(hook_path, "w") as f:
        f.write(pre_commit_content)
    
    os.chmod(hook_path, 0o755)
    print("‚úÖ Git pre-commit hook —Å–æ–∑–¥–∞–Ω")
    return True

def update_docker_config():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç Docker –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏."""
    dockerhub_username = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Docker Hub username (–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞): ").strip()
    
    if not dockerhub_username:
        print("‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É Docker Hub")
        return True
    
    try:
        with open("deploy_config.json", "r", encoding="utf-8") as f:
            config = json.load(f)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º Docker image
        config["dockerImage"] = f"{dockerhub_username}/wan22-worker:v1.0.0"
        
        with open("deploy_config.json", "w", encoding="utf-8") as f:
            json.dump(config, f, indent=4, ensure_ascii=False)
        
        print(f"‚úÖ Docker image –æ–±–Ω–æ–≤–ª–µ–Ω: {dockerhub_username}/wan22-worker:v1.0.0")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º GitHub Actions workflow
        with open(".github/workflows/release.yml", "r", encoding="utf-8") as f:
            workflow = f.read()
        
        workflow = workflow.replace(
            "IMAGE_NAME: your-dockerhub-username/wan22-worker",
            f"IMAGE_NAME: {dockerhub_username}/wan22-worker"
        )
        
        with open(".github/workflows/release.yml", "w", encoding="utf-8") as f:
            f.write(workflow)
        
        print("‚úÖ GitHub Actions workflow –æ–±–Ω–æ–≤–ª–µ–Ω")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏."""
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    # Git
    if not run_command("git --version", check=False):
        print("‚ùå Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return False
    print("‚úÖ Git —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    # Python
    if not run_command("python3 --version", check=False):
        print("‚ùå Python 3 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return False
    print("‚úÖ Python 3 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    # jq (–¥–ª—è Makefile)
    if not run_command("jq --version", check=False):
        print("‚ö†Ô∏è  jq –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã Makefile –º–æ–≥—É—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å.")
        print("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: brew install jq (macOS) –∏–ª–∏ apt install jq (Ubuntu)")
    else:
        print("‚úÖ jq —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    # GitHub CLI (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    if not run_command("gh --version", check=False):
        print("‚ö†Ô∏è  GitHub CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ releases –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å.")
        print("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: https://cli.github.com/")
    else:
        print("‚úÖ GitHub CLI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        if not run_command("gh auth status", check=False):
            print("‚ö†Ô∏è  –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –≤ GitHub CLI. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: gh auth login")
        else:
            print("‚úÖ GitHub CLI –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
    
    return True

def main():
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è WAN 2.2 RunPod Worker")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if not check_dependencies():
        print("‚ùå –ù–µ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        sys.exit(1)
    
    print("\n" + "=" * 60)
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Docker –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if not update_docker_config():
        print("‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Docker –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        sys.exit(1)
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º git hooks
    if not setup_git_hooks():
        print("‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ git hooks")
        sys.exit(1)
    
    print("\n" + "=" * 60)
    print("üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:")
    print("  ‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å —Ä–µ–ª–∏–∑—ã: make patch/minor/major")
    print("  ‚Ä¢ –°–æ–±–∏—Ä–∞—Ç—å Docker images: make build")
    print("  ‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å: make status")
    print("  ‚Ä¢ –ü–æ–ª—É—á–∞—Ç—å –ø–æ–º–æ—â—å: make help")
    
    print(f"\nüìñ –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: docs/releases.md")
    
    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—ã–π —Ä–µ–ª–∏–∑
    response = input("\n‚ùì –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—ã–π —Ä–µ–ª–∏–∑ (v1.0.0)? (y/N): ")
    if response.lower() == 'y':
        if run_command("python release.py patch", check=False):
            print("üéâ –ü–µ—Ä–≤—ã–π —Ä–µ–ª–∏–∑ —Å–æ–∑–¥–∞–Ω!")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ª–∏–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—Ä—É—á–Ω—É—é: python release.py patch")

if __name__ == "__main__":
    main()