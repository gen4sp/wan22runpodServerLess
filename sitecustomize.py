"""
üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–´–ô –ü–ê–¢–ß torchaudio üö®
–°–æ–∑–¥–∞—ë—Ç –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π mock –º–æ–¥—É–ª—å torchaudio –î–û –ª—é–±—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤.
–ö–æ–ø–∏—Ä—É–µ—Ç—Å—è –≤ /usr/local/lib/python3.11/dist-packages/sitecustomize.py –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞,
—á—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—É—Å–∫–µ Python.
"""
import sys
import types
import importlib.util


def create_aggressive_mock_torchaudio():
    """–°–æ–∑–¥–∞—ë—Ç –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π mock-–º–æ–¥—É–ª—å torchaudio, —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π —Å ComfyUI."""
    
    # –°–æ–∑–¥–∞–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–¥–º–æ–¥—É–ª–∏
    modules_to_mock = [
        'torchaudio',
        'torchaudio.lib',
        'torchaudio.lib._torchaudio', 
        'torchaudio._extension',
        'torchaudio._extension.utils',
        'torchaudio.functional',
        'torchaudio.transforms',
        'torchaudio.datasets',
        'torchaudio.io',
        'torchaudio.backend',
        'torchaudio.compliance'
    ]
    
    # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ mock –º–æ–¥—É–ª–∏
    for module_name in modules_to_mock:
        if module_name not in sys.modules:
            mock_module = types.ModuleType(module_name)
            sys.modules[module_name] = mock_module
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π torchaudio –º–æ–¥—É–ª—å
    torchaudio = sys.modules['torchaudio']
    torchaudio.__version__ = '2.5.0'
    torchaudio.__file__ = '/usr/local/lib/python3.11/dist-packages/torchaudio/__init__.py'
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º torchaudio.lib._torchaudio —Å –Ω—É–∂–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏
    _torchaudio = sys.modules['torchaudio.lib._torchaudio']
    _torchaudio.cuda_version = lambda: '12.8'
    _torchaudio.is_available = lambda: True
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º torchaudio.lib
    lib = sys.modules['torchaudio.lib']
    lib._torchaudio = _torchaudio
    torchaudio.lib = lib
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º torchaudio._extension —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ CUDA
    extension = sys.modules['torchaudio._extension']
    extension._check_cuda_version = lambda: None
    extension._init_extension = lambda: None
    torchaudio._extension = extension
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º torchaudio._extension.utils
    utils = sys.modules['torchaudio._extension.utils']
    utils._check_cuda_version = lambda: None
    utils._get_cuda_version = lambda: '12.8'
    extension.utils = utils
    
    # –î–æ–±–∞–≤–ª—è–µ–º –¥—Ä—É–≥–∏–µ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã
    torchaudio.functional = sys.modules['torchaudio.functional']
    torchaudio.transforms = sys.modules['torchaudio.transforms']
    torchaudio.datasets = sys.modules['torchaudio.datasets']
    torchaudio.io = sys.modules['torchaudio.io']
    torchaudio.backend = sys.modules['torchaudio.backend']
    torchaudio.compliance = sys.modules['torchaudio.compliance']
    
    return torchaudio


def block_torchaudio_import():
    """–ë–ª–æ–∫–∏—Ä—É–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã torchaudio —á–µ—Ä–µ–∑ import hook."""
    original_import = __builtins__.__import__
    
    def patched_import(name, globals=None, locals=None, fromlist=(), level=0):
        # –ï—Å–ª–∏ –ø—ã—Ç–∞—é—Ç—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å torchaudio - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞—à mock
        if name == 'torchaudio' or name.startswith('torchaudio.'):
            if name in sys.modules:
                return sys.modules[name]
            else:
                # –°–æ–∑–¥–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–π –ø–æ–¥–º–æ–¥—É–ª—å –Ω–∞ –ª–µ—Ç—É
                mock_module = types.ModuleType(name)
                sys.modules[name] = mock_module
                return mock_module
        
        # –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –º–æ–¥—É–ª–µ–π - –æ–±—ã—á–Ω—ã–π –∏–º–ø–æ—Ä—Ç
        return original_import(name, globals, locals, fromlist, level)
    
    __builtins__.__import__ = patched_import


# üö® –ü–†–ò–ú–ï–ù–Ø–ï–ú –ü–ê–¢–ß–ò –ù–ï–ú–ï–î–õ–ï–ù–ù–û üö®
print("üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π torchaudio mock...")
create_aggressive_mock_torchaudio()
block_torchaudio_import()
print("‚úÖ torchaudio mock –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω —á–µ—Ä–µ–∑ sitecustomize.py")