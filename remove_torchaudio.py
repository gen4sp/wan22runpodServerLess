#!/usr/bin/env python3
"""
–ü–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ torchaudio –∏–∑ —Å–∏—Å—Ç–µ–º—ã –∏ –∑–∞–º–µ–Ω–∞ –Ω–∞ mock
"""
import os
import sys
import shutil
import types

# –£–¥–∞–ª—è–µ–º torchaudio –∏–∑ pip
print("üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ torchaudio —á–µ—Ä–µ–∑ pip...")
os.system("pip uninstall -y torchaudio 2>/dev/null || true")

# –ù–∞—Ö–æ–¥–∏–º –∏ —É–¥–∞–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã torchaudio
print("üîç –ü–æ–∏—Å–∫ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ torchaudio...")
for root, dirs, files in os.walk("/usr/local/lib/python3.11/"):
    if "torchaudio" in root:
        print(f"   –£–¥–∞–ª—è–µ–º: {root}")
        shutil.rmtree(root, ignore_errors=True)

# –°–æ–∑–¥–∞–µ–º —Ñ–µ–π–∫–æ–≤—ã–π –ø–∞–∫–µ—Ç torchaudio
print("üì¶ –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–µ–π–∫–æ–≤–æ–≥–æ –ø–∞–∫–µ—Ç–∞ torchaudio...")
fake_torchaudio_path = "/usr/local/lib/python3.11/dist-packages/torchaudio"
os.makedirs(fake_torchaudio_path, exist_ok=True)

# –°–æ–∑–¥–∞–µ–º __init__.py —Å –ø–æ–ª–Ω—ã–º mock
init_content = '''
import sys
import types

# Mock –¥–ª—è _torchaudio
_torchaudio = types.ModuleType('_torchaudio')
_torchaudio.cuda_version = lambda: '12.8'

# Mock –¥–ª—è torchaudio.lib
lib = types.ModuleType('torchaudio.lib')
lib._torchaudio = _torchaudio

# Mock –¥–ª—è torchaudio._extension
_extension = types.ModuleType('torchaudio._extension')
_extension._check_cuda_version = lambda: None
_extension.utils = types.ModuleType('torchaudio._extension.utils')
_extension.utils._check_cuda_version = lambda: None

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏
sys.modules['torchaudio.lib._torchaudio'] = _torchaudio
sys.modules['torchaudio.lib'] = lib
sys.modules['torchaudio._extension'] = _extension
sys.modules['torchaudio._extension.utils'] = _extension.utils

# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã
__version__ = '2.5.0'
__all__ = ['lib', '_extension']
'''

with open(os.path.join(fake_torchaudio_path, "__init__.py"), "w") as f:
    f.write(init_content)

# –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∞–ø–∫–∏
os.makedirs(os.path.join(fake_torchaudio_path, "lib"), exist_ok=True)
os.makedirs(os.path.join(fake_torchaudio_path, "_extension"), exist_ok=True)

# –°–æ–∑–¥–∞–µ–º __init__.py –¥–ª—è –ø–æ–¥–º–æ–¥—É–ª–µ–π
with open(os.path.join(fake_torchaudio_path, "lib", "__init__.py"), "w") as f:
    f.write("# Mock lib module\n")

with open(os.path.join(fake_torchaudio_path, "_extension", "__init__.py"), "w") as f:
    f.write("# Mock extension module\ndef _check_cuda_version(): pass\n")

print("‚úÖ –§–µ–π–∫–æ–≤—ã–π –ø–∞–∫–µ—Ç torchaudio —Å–æ–∑–¥–∞–Ω")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–æ–∂–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å
try:
    import torchaudio
    print(f"‚úÖ torchaudio —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω (–≤–µ—Ä—Å–∏—è: {torchaudio.__version__})")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ torchaudio: {e}")