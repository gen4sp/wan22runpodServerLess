#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è torchaudio –∏ —Å–æ–∑–¥–∞–Ω–∏—è mock-–≤–µ—Ä—Å–∏–∏
"""
import os
import sys
import shutil
import subprocess

def remove_torchaudio():
    """–ü–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª—è–µ—Ç torchaudio –∏–∑ —Å–∏—Å—Ç–µ–º—ã"""
    
    # 1. –£–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ pip
    try:
        subprocess.run([sys.executable, '-m', 'pip', 'uninstall', '-y', 'torchaudio'], 
                      capture_output=True, check=False)
        print("‚úÖ torchaudio —É–¥–∞–ª–µ–Ω —á–µ—Ä–µ–∑ pip")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —á–µ—Ä–µ–∑ pip: {e}")
    
    # 2. –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ site-packages
    site_packages_dirs = []
    for path in sys.path:
        if ('site-packages' in path or 'dist-packages' in path) and os.path.exists(path):
            site_packages_dirs.append(path)
    
    # 3. –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ torchaudio
    removed_count = 0
    for site_dir in site_packages_dirs:
        for item in os.listdir(site_dir):
            if 'torchaudio' in item.lower():
                item_path = os.path.join(site_dir, item)
                try:
                    if os.path.isdir(item_path):
                        shutil.rmtree(item_path)
                    else:
                        os.remove(item_path)
                    print(f"‚úÖ –£–¥–∞–ª–µ–Ω: {item_path}")
                    removed_count += 1
                except Exception as e:
                    print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å {item_path}: {e}")
    
    print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {removed_count} —Ñ–∞–π–ª–æ–≤/–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π torchaudio")
    
    # 4. –°–æ–∑–¥–∞–µ–º mock torchaudio
    create_mock_torchaudio()

def create_mock_torchaudio():
    """–°–æ–∑–¥–∞–µ—Ç mock-–≤–µ—Ä—Å–∏—é torchaudio"""
    
    torchaudio_mock = '''"""Mock torchaudio module –¥–ª—è ComfyUI"""

__version__ = "2.1.0+mock"
__file__ = "/mock/torchaudio/__init__.py"

def load(*args, **kwargs):
    raise RuntimeError("torchaudio –æ—Ç–∫–ª—é—á–µ–Ω –≤ —ç—Ç–æ–π —Å–±–æ—Ä–∫–µ")

def save(*args, **kwargs):
    raise RuntimeError("torchaudio –æ—Ç–∫–ª—é—á–µ–Ω –≤ —ç—Ç–æ–π —Å–±–æ—Ä–∫–µ")

class lib:
    """Mock lib module"""
    pass

class transforms:
    @staticmethod
    def Resample(*args, **kwargs):
        raise RuntimeError("torchaudio –æ—Ç–∫–ª—é—á–µ–Ω –≤ —ç—Ç–æ–π —Å–±–æ—Ä–∫–µ")

class functional:
    @staticmethod
    def resample(*args, **kwargs):
        raise RuntimeError("torchaudio –æ—Ç–∫–ª—é—á–µ–Ω –≤ —ç—Ç–æ–π —Å–±–æ—Ä–∫–µ")

# –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã
backend = None
'''
    
    # –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤—É—é –¥–æ—Å—Ç—É–ø–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é site-packages
    site_packages = None
    for path in sys.path:
        if ('site-packages' in path or 'dist-packages' in path) and os.path.exists(path):
            site_packages = path
            break
    
    if site_packages:
        torchaudio_dir = os.path.join(site_packages, 'torchaudio')
        os.makedirs(torchaudio_dir, exist_ok=True)
        
        # –°–æ–∑–¥–∞–µ–º __init__.py
        with open(os.path.join(torchaudio_dir, '__init__.py'), 'w') as f:
            f.write(torchaudio_mock)
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω mock torchaudio –≤ {torchaudio_dir}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ mock —Ä–∞–±–æ—Ç–∞–µ—Ç
        try:
            import torchaudio
            print(f"‚úÖ Mock torchaudio —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω: {torchaudio.__version__}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ mock torchaudio: {e}")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ site-packages –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è mock")

if __name__ == "__main__":
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ torchaudio...")
    remove_torchaudio()
    print("‚úÖ –ì–æ—Ç–æ–≤–æ!")